/*
  This file is automatically generated. Any changes will be overwritten.
  Modify textbausteine.component.ts instead.
*/
import { LOCALE_ID, ChangeDetectorRef, ViewChild, AfterViewInit, Injector, OnInit, OnDestroy } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { Location } from '@angular/common';
import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';
import { Subscription } from 'rxjs';

import { DialogService, DIALOG_PARAMETERS, DialogRef } from '@radzen/angular/dist/dialog';
import { NotificationService } from '@radzen/angular/dist/notification';
import { ContentComponent } from '@radzen/angular/dist/content';
import { HeadingComponent } from '@radzen/angular/dist/heading';
import { TabsComponent } from '@radzen/angular/dist/tabs';
import { PanelComponent } from '@radzen/angular/dist/panel';
import { ListBoxComponent } from '@radzen/angular/dist/listbox';
import { DropDownComponent } from '@radzen/angular/dist/dropdown';
import { RadioButtonListComponent } from '@radzen/angular/dist/radiobuttonlist';
import { ButtonComponent } from '@radzen/angular/dist/button';
import { GridComponent } from '@radzen/angular/dist/grid';
import { HtmlComponent } from '@radzen/angular/dist/html';

import { ConfigService } from '../config.service';

import { DbHopeKurseTextbausteineService } from '../db-hope-kurse-textbausteine.service';
import { SecurityService } from '../security.service';

export class TextbausteineGenerated implements AfterViewInit, OnInit, OnDestroy {
  // Components
  @ViewChild('content1') content1: ContentComponent;
  @ViewChild('heading0') heading0: HeadingComponent;
  @ViewChild('heading1') heading1: HeadingComponent;
  @ViewChild('heading2') heading2: HeadingComponent;
  @ViewChild('tabs0') tabs0: TabsComponent;
  @ViewChild('panel0') panel0: PanelComponent;
  @ViewChild('listbox0') listbox0: ListBoxComponent;
  @ViewChild('dropdown4') dropdown4: DropDownComponent;
  @ViewChild('dropdown5') dropdown5: DropDownComponent;
  @ViewChild('dropdown6') dropdown6: DropDownComponent;
  @ViewChild('dropdown7') dropdown7: DropDownComponent;
  @ViewChild('dropdown8') dropdown8: DropDownComponent;
  @ViewChild('dropdown9') dropdown9: DropDownComponent;
  @ViewChild('dropdown1') dropdown1: DropDownComponent;
  @ViewChild('radiobuttonlist0') radiobuttonlist0: RadioButtonListComponent;
  @ViewChild('button7') button7: ButtonComponent;
  @ViewChild('panel4') panel4: PanelComponent;
  @ViewChild('gridTextbausteine') gridTextbausteine: GridComponent;
  @ViewChild('button0') button0: ButtonComponent;
  @ViewChild('button1') button1: ButtonComponent;
  @ViewChild('button2') button2: ButtonComponent;
  @ViewChild('button3') button3: ButtonComponent;
  @ViewChild('panel6') panel6: PanelComponent;
  @ViewChild('htmlEditorInfotexte') htmlEditorInfotexte: HtmlComponent;
  @ViewChild('button4') button4: ButtonComponent;
  @ViewChild('buttonNeu') buttonNeu: ButtonComponent;
  @ViewChild('buttonLoeschen') buttonLoeschen: ButtonComponent;

  router: Router;

  cd: ChangeDetectorRef;

  route: ActivatedRoute;

  notificationService: NotificationService;

  configService: ConfigService;

  dialogService: DialogService;

  dialogRef: DialogRef;

  httpClient: HttpClient;

  locale: string;

  _location: Location;

  _subscription: Subscription;

  dbHopeKurseTextbausteine: DbHopeKurseTextbausteineService;

  security: SecurityService;
  getIbsiTextbausteineArtensResult: any;
  valTextbausteineArten: any;
  parameters: any;
  rstTextbausteine: any;
  strTextbausteinHTML: any;

  constructor(private injector: Injector) {
  }

  ngOnInit() {
    this.notificationService = this.injector.get(NotificationService);

    this.configService = this.injector.get(ConfigService);

    this.dialogService = this.injector.get(DialogService);

    this.dialogRef = this.injector.get(DialogRef, null);

    this.locale = this.injector.get(LOCALE_ID);

    this.router = this.injector.get(Router);

    this.cd = this.injector.get(ChangeDetectorRef);

    this._location = this.injector.get(Location);

    this.route = this.injector.get(ActivatedRoute);

    this.httpClient = this.injector.get(HttpClient);

    this.dbHopeKurseTextbausteine = this.injector.get(DbHopeKurseTextbausteineService);
    this.security = this.injector.get(SecurityService);
  }

  ngAfterViewInit() {
    this._subscription = this.route.params.subscribe(parameters => {
      if (this.dialogRef) {
        this.parameters = this.injector.get(DIALOG_PARAMETERS);
      } else {
        this.parameters = parameters;
      }
      this.load();
      this.cd.detectChanges();
    });
  }

  ngOnDestroy() {
    if (this._subscription) {
      this._subscription.unsubscribe();
    }
  }


  load() {
    this.gridTextbausteine.load();

    this.dbHopeKurseTextbausteine.getIbsiTextbausteineArtens(null, null, null, null, null, null, null, null)
    .subscribe((result: any) => {
      this.getIbsiTextbausteineArtensResult = result.value;
    }, (result: any) => {

    });

    this.valTextbausteineArten = [{text: 'Accounting', value: 'A'}, {text: 'Marketing', value: 'M'}, {text: 'Production', value: 'P'}, {text: 'Research', value: 'R'},{text: 'Accounting', value: 'A'}, {text: 'Marketing', value: 'M'}, {text: 'Production', value: 'P'}, {text: 'Research', value: 'R'},{text: 'Accounting', value: 'A'}, {text: 'Marketing', value: 'M'}, {text: 'Production', value: 'P'}, {text: 'Research', value: 'R'},{text: 'Accounting', value: 'A'}, {text: 'Marketing', value: 'M'}];
  }

  gridTextbausteineLoadData(event: any) {
    this.dbHopeKurseTextbausteine.getIbsiTextbausteines(`KursNr eq -899890728`, null, null, null, null, null, null, null)
    .subscribe((result: any) => {
      this.rstTextbausteine = result.value;

      this.gridTextbausteine.onSelect(this.rstTextbausteine[0]);
    }, (result: any) => {

    });
  }

  gridTextbausteineRowSelect(event: any) {
    this.strTextbausteinHTML = event.TextbausteinHTML;
  }
}
